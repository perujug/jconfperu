# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Workflow for building JCONF website and deploying a Jekyll site to Vercel
name: Deploy JCONF website to Vercel

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]
  
  # Runs on pull requests for preview deployments
  pull_request:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-artifact@v4
        with:
          name: jconfwebsite
          path: _site

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: jconfwebsite
          path: _site
      - name: Debug _site directory
        if: github.event_name == 'pull_request'
        run: |
          echo "Contents of _site directory:"
          ls -la _site/
          echo "Checking for index.html:"
          ls -la _site/index.html || echo "index.html not found"
          echo "Checking for other files:"
          find _site -name "*.html" | head -5
          echo "Checking _site directory size:"
          du -sh _site/
          echo "First few lines of index.html:"
          head -10 _site/index.html || echo "Cannot read index.html"
      - name: Deploy to Vercel (Production)
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'
      - name: Install Vercel CLI
        if: github.event_name == 'pull_request'
        run: npm install -g vercel@latest
      - name: Verify Vercel Configuration
        if: github.event_name == 'pull_request'
        run: |
          # Check Vercel CLI version
          echo "Vercel CLI version:"
          vercel --version
          
          # Check if vercel.json exists
          if [ -f "vercel.json" ]; then
            echo "vercel.json found:"
            cat vercel.json
          else
            echo "WARNING: vercel.json not found"
          fi
          
          # Check if package.json exists
          if [ -f "package.json" ]; then
            echo "package.json found:"
            cat package.json
          else
            echo "WARNING: package.json not found"
          fi
          
          # Test Vercel authentication
          echo "Testing Vercel authentication..."
          vercel whoami --token ${{ secrets.VERCEL_TOKEN }}
      - name: Prepare Static Files for Deployment
        if: github.event_name == 'pull_request'
        run: |
          echo "Preparing static files for deployment..."
          echo "Contents of _site directory:"
          ls -la _site/
          
          # Check if _site directory has content
          if [ ! -f "_site/index.html" ]; then
            echo "ERROR: index.html not found in _site directory"
            exit 1
          fi
          
          echo "Copying _site contents to root for direct serving..."
          cp -r _site/* .
          cp -r _site/.* . 2>/dev/null || true
          
          echo "Contents of root directory after copy:"
          ls -la
          
          echo "Verifying index.html is accessible:"
          ls -la index.html
      - name: Deploy to Vercel (Preview)
        if: github.event_name == 'pull_request'
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--name jconfperu-pr-${{ github.event.number }} --public'
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      - name: Comment PR with Preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('ðŸš€ Preview deployment')
            );
            
            // Get the preview URL from the deployment step
            const previewUrl = '${{ steps.deploy.outputs.preview-url }}' || `https://jconfperu-pr-${context.issue.number}-dario-lunas-projects.vercel.app`;
            
            const body = `ðŸš€ **Preview deployment ready!**
            
            **Unique Preview URL:** ${previewUrl}
            
            This is a unique preview deployment for PR #${context.issue.number}.
            The preview will be automatically updated when you push new commits to this PR.
            
            **Features:**
            - âœ… Unique URL for this PR
            - âœ… Automatic updates on new commits
            - âœ… Safe testing environment
            - âœ… Automatic cleanup when PR is closed
            
            ---
            *This is an automated preview deployment for testing purposes.*`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }